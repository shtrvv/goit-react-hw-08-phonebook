{"version":3,"file":"static/js/893.3875a716.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    width: 400px;\n    margin: 0 auto;\n    box-shadow: rgba(90, 68, 134, 0.12) 0px 4px 8px 0px, rgba(90, 68, 134, 0.32) 0px 8px 24px 0px;\n    border-radius: 7px;\n    padding: 10px 0;\n`\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n    font-size: 18px;\n    font-weight: 700;\n    color: #663399;\n`\nexport const Input = styled.input`\n    font-size: 16px;\n    border-radius: 5px;\n    border: 3px solid #663399;\n    padding: 5px;\n`\nexport const Button = styled.button`\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 700;\n    background-color: #9370DB;\n    border-radius: 7px;\n    border: none;\n    padding: 8px 10px;\n    color: white;\n    text-transform: capitalize;\n    transition-duration: .3s;\n    transition-timing-function: linear;\n\n    &:is(:hover) {\n        transform: scale(1.15);\n        background-color: #663399;\n    }\n`\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectItems = (state) => state.contacts.items;\nexport const selectIsLoading = (state) => state.contacts.isLoading;\nexport const selectError = (state) => state.contacts.error;\nexport const selectFilter = (state) => state.filter;\n\nexport const selectFilteredItems = createSelector(\n    [selectItems, selectFilter], (items, filter) => {\n        return items.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n    }\n)\n","import { Form, Label, Input, Button } from \"./ContactForm.styled\";\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectItems } from \"../../redux/contacts/selectors\";\nimport { addContactThunk } from \"../../redux/contacts/contactsThunks\";\nimport Notiflix from 'notiflix';\n\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectItems);\n\n    const [data, setData] = useState({\n        name: '',\n        number: '',\n    })\n\n    const handleChange = ({target:{name, value}}) => {\n        setData((prev) => ({\n            ...prev,\n            [name]: value,\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const isExist = contacts?.find(({name}) => name.toLowerCase() === data.name.toLowerCase());\n        if (isExist) {\n            return Notiflix.Notify.failure(`${data.name} is already exist`);\n        }\n\n        Notiflix.Notify.success(`${data.name} add to contacts`);\n        dispatch(addContactThunk(data));\n\n        setData({\n            name: '',\n            number: '',\n        });\n    }\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Label>Name\n            <Input type=\"text\" name=\"name\" value={data.name} onChange={handleChange} placeholder=\"Alex\" required />\n        </Label>\n        <Label>Number\n            <Input type=\"tel\" name=\"number\" value={data.number} onChange={handleChange} placeholder=\"123-45-67\" required />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    )\n}\n\nexport default ContactForm\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin: 30px auto 0;\n    width: 400px;\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n    border-radius: 7px;\n    padding: 10px 0;\n    align-items: center;\n`\nexport const Item = styled.li`\n    display: flex;\n    gap: 10px;\n    align-items: center;\n`\nexport const Contact = styled.p`\n    font-size: 18px;\n    font-weight: 700;\n    color: #663399;\n`\nexport const Number = styled.span`\n    color: black;\n    font-weight: 500;\n`\nexport const Button = styled.button`\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 700;\n    border-radius: 7px;\n    border: none;\n    padding: 5px 10px;\n    color: white;\n    background-color: #B22222;\n    transition-duration: .3s;\n    transition-timing-function: linear;\n\n    &:is(:hover) {\n        transform: scale(1.15);\n        background-color: #8B0000;\n    }\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { List, Item, Contact, Number, Button } from \"./ContactList.styled\";\nimport { selectFilteredItems } from \"../../redux/contacts/selectors\";\nimport { deleteContactThunk } from \"../../redux/contacts/contactsThunks\";\nimport Notiflix from \"notiflix\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredItems);\n  \n  const handleDelete = (id) => {\n    dispatch(deleteContactThunk(id));\n  }\n\n  return (\n    <List>\n      {filteredContacts.map(({id, name, number}) => {\n        return (\n          <Item key={id}>\n            <Contact>{name}: <Number>{number}</Number></Contact>\n            <Button type=\"button\" onClick={() => {\n              Notiflix.Notify.info(`${name} deleted`)\n              return handleDelete(id)\n            }}>Delete</Button>\n          </Item>\n            )\n      })}\n      </List > \n  )\n}\n\nexport default ContactList\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    width: 400px;\n    align-items: center;\n    margin: 0 auto;\n    gap: 5px;\n    font-size: 18px;\n    font-weight: 700;\n    color: #663399;\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n    border-radius: 7px;\n    padding: 10px 0;\n`\nexport const Input = styled.input`\n    font-size: 16px;\n    border-radius: 5px;\n    border: 3px solid #663399;\n    padding: 5px;\n`\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Label, Input } from \"./Filter.styled\";\nimport { setFilter } from \"../../redux/contacts/filterSlice\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = (e) => {\n    dispatch(setFilter(e.target.value.toLowerCase()));\n  }\n\n  return (\n      <Label>\n          Find contacts by name\n          <Input type=\"text\" onChange={handleChangeFilter} value={filter} />\n      </Label>\n  )\n}\n\nexport default Filter\n","import styled from \"styled-components\";\n\nexport const Text = styled.p`\n    display: flex;\n    justify-content: center;\n    margin-top: 30px;\n    font-size: 18px;\n    font-weight: 700;\n    color: #663399;\n    text-decoration: underline;\n`\n","import { Text } from \"./Notification.styled\"\n\nconst Notification = ({ message }) => {\n  return (\n      <Text>{message}</Text>\n  )\n}\n\nexport default Notification\n","import styled from \"styled-components\";\n\nexport const Header = styled.h1`\n    display: flex;\n    margin-bottom: 20px;\n    justify-content: center;\n    color: white;\n    text-shadow: #663399 2px 0 3px, #663399 0 2px 3px, #663399 -2px 0 3px, #663399 0 -2px 3px;\n`\nexport const StyledSection = styled.section`\n    margin-top: 30px;\n    margin-bottom: 30px;\n`\n","import React from 'react'\nimport { Header, StyledSection } from './Section.styled'\n\nconst Section = ({title, children}) => {\n  return (\n    <StyledSection>\n          <Header>{title}</Header>\n          {children}\n    </StyledSection>\n  )\n}\n\nexport default Section\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Notification from 'components/Notification/Notification';\nimport Section from 'components/Section/Section';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchContactsThunk } from '../redux/contacts/contactsThunks';\nimport { selectItems } from '../redux/contacts/selectors';\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectItems);\n\n    useEffect(() => {\n    dispatch(fetchContactsThunk());\n    }, [dispatch])\n    \n    return (\n        <>\n            <Section title={'Phonebook'}>\n                <ContactForm />\n            </Section>  \n            <Section title={'Contacts'}>\n                <Filter />\n                {contacts?.length ?\n                <ContactList />\n                    :\n                <Notification message={'There are no contacts'} />\n                }\n            </Section>  \n        </>\n    )\n}\n\nexport default Contacts"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","selectItems","state","contacts","items","selectFilter","filter","selectFilteredItems","createSelector","_ref","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_useState","useState","number","_useState2","_slicedToArray","data","setData","handleChange","_ref$target","target","value","prev","_objectSpread","_defineProperty","_jsxs","onSubmit","e","preventDefault","find","_ref2","Notiflix","concat","addContactThunk","children","_jsx","type","onChange","placeholder","required","List","Item","Contact","Number","_templateObject5","filteredContacts","map","id","onClick","deleteContactThunk","handleDelete","setFilter","Text","message","Header","StyledSection","title","useEffect","fetchContactsThunk","_Fragment","Section","ContactForm","Filter","length","ContactList","Notification"],"sourceRoot":""}